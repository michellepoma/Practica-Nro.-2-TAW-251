# Nombre de la aplicación Spring Boot
spring.application.name=mi-proyecto-spring-boot

# Puerto en el que se ejecutará el servidor
server.port=8080

# Configuración de la base de datos PostgreSQL
# URL de conexión a la base de datos PostgreSQL (protocolo, host, puerto y nombre de la base de datos)
spring.datasource.url=jdbc:postgresql://localhost:5432/universidad
# Nombre de usuario para conectarse a la base de datos
spring.datasource.username=postgres
# Contraseña para conectarse a la base de datos
spring.datasource.password=123456
# Clase del driver JDBC para PostgreSQL
spring.datasource.driver-class-name=org.postgresql.Driver

# Configuración de JPA e Hibernate
# Estrategia para la creación y actualización de las tablas en la base de datos
spring.jpa.hibernate.ddl-auto=update
# Muestra las consultas SQL generadas por Hibernate en la consola
spring.jpa.show-sql=true
# Dialecto de Hibernate para PostgreSQL, que optimiza las consultas para esta base de datos
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

spring.mvc.throw-exception-if-no-handler-found=true
# 
#spring.web.resources.add-mappings=false
#

springdoc.swagger-ui.path=/swagger-ui.html


# Agregamos la configuracion para la conexion con redis
spring.cache.type=redis
spring.redis.host=localhost
spring.redis.port=6379

# Clave secreta JWT (mínimo 64 caracteres para HS512)
app.jwtSecret=K8jd73ms82xhsOq9zP1lMf7Ks92xLQ8sdjf93KslWpa9BvnsPQ7Ks82lZlxMf9Lp

# Tiempo de expiración del token JWT (en milisegundos)
# Ejemplo: 86400000 ms = 24 horas
app.jwtExpirationMs=86400000
